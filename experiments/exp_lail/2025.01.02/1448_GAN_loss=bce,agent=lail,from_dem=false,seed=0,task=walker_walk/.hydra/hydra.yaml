hydra:
  run:
    dir: ./experiments/exp_${agent_name}/${now:%Y.%m.%d}/${now:%H%M}_${hydra.job.override_dirname}
  sweep:
    dir: ./experiments/exp_multirun_${agent_name}_${task_name}_num_expert_episodes_${num_expert_episodes}/GAN_loss_${GAN_loss}_from_dem_${from_dem}/
    subdir: ${now:%Y.%m.%d}_${now:%H%M}_${hydra.job.override_dirname}
  launcher:
    submitit_folder: ./experiments/exp_multirun_${agent_name}_${task_name}_num_expert_episodes_${num_expert_episodes}/GAN_loss_${GAN_loss}_from_dem_${from_dem}/${now:%Y.%m.%d}_${now:%H%M}
    timeout_min: 18000000
    cpus_per_task: 10
    gpus_per_node: 1
    tasks_per_node: 1
    mem_gb: 160
    nodes: 1
    name: ${hydra.job.name}
    _target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.LocalLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - task=walker_walk
    - agent=lail
    - seed=0
    - GAN_loss=bce
    - from_dem=false
  job:
    name: train_LAIL
    override_dirname: GAN_loss=bce,agent=lail,from_dem=false,seed=0,task=walker_walk
    id: ???
    num: ???
    config_name: config_lail
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.0
    cwd: /home/michaelbezick/Repos/AIL_from_visual_obs
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/michaelbezick/Repos/AIL_from_visual_obs/config_folder/POMDP
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      expert: ddpg
      agent: lail
      task: walker_walk
      replay_buffer_expert: numpy
      replay_buffer: numpy
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: submitit_local
      hydra/output: default
  verbose: false
